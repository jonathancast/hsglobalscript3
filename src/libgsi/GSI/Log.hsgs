{-# LANGUAGE TemplateHaskell #-}
module GSI.Log (gsbclog, gsbclog_w, gsbclogstring, gsbclogstring_w, gslog_str, gslog_dstr, gslogchar, gsloggsv, gslog_fmt) where

import Language.Haskell.TH.Lib (varE, appE)

import GSI.Util (Pos, gshere)
-- §hs{gsvar} is imported by gsimports
import GSI.Value (GSValue(..), GSExpr, GSArg, gslambda_value, gsae, gsav)
import GSI.ByteCode (gsbcenter, gsbcconstr, gsbcconstr_view) -- §hs{gsbcapply_w} is imported by gsimports
-- §hs{gscompose} is imported by gsimports
$gsimports

gsbclog = varE 'gsbclog_w `appE` gshere

gsbclog_w :: Pos -> [GSArg] -> GSExpr
gsbclog_w pos as = foldr (\ a k -> gsbcapply_w pos gscompose [ a, $gsae k ]) ($gsbcenter gslogempty) as

gslogempty = [gs:value| λ 'k. k |]

gslog_dstr = [gs:value| λ 'ds. log.str (ds nil) |]

gslog_str = [gs:value| λ 's. foldr log.<> log.nil $ map log.char s |]

$gsdeclare paragraph-constituent.char gsparagraph_constituent_char

gslogchar = [gs:value| λ 'ch. λ 'k.
    〈 'paragraph-constituents ∝ paragraph-constituent.char ch : k #paragraph-constituents; 〉
|]

$gsdeclare paragraph-constituent.gsv gsparagraph_constituent_gsv

gsloggsv = [gs:value| λ 'x. λ 'k.
    〈 'paragraph-constituents ∝ paragraph-constituent.gsv x : k #paragraph-constituents; 〉
|]

gsbclogstring = varE 'gsbclogstring_w `appE` gshere

gsbclogstring_w :: Pos -> String -> GSExpr
gsbclogstring_w pos s = foldr (\ ch k -> gsbcapply_w pos gscompose [ $gsae $ gsbcapply_w pos gslogchar [$gsav $ GSRune ch], $gsae k ]) ($gsbcenter gslogempty) s

$gsdeclare log-fmt-w gslog_fmt_w

gslog_fmt = [gs:value| λ 'l. log-fmt-w (l 〈 'paragraph-constituents ∝ nil; 〉 #paragraph-constituents) |]

$gsdeclare view paragraph-constituent.char gsparagraph_constituent_char_view

gslog_fmt_w = [gs:value| λ 'pcs. analyze pcs.
    case (paragraph-constituent.char 'ch):'pcs1. ch : log-fmt-w pcs1
    case nil. nil
|]

gsparagraph_constituent_char = $gslambda_value $ \ ch -> $gsbcconstr (gsvar "char") [ $gsav ch ]
gsparagraph_constituent_gsv = $gslambda_value $ \ x -> $gsbcconstr (gsvar "gsv") [ $gsav x ]

gsparagraph_constituent_char_view = $gsbcconstr_view "char"
