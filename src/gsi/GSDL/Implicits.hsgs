module GSDL.Implicits (gsimplicit_env_consumes_get, gsimplicit_env_consumes_insert, gsimplicit_env_generators_get, gsimplicit_env_empty) where

$gsimports

gsimplicit_env_consumes_get = [gs:value| λ 'v. λ 'env. analyze ordered-map.get gsvar.<=> v (env #consumes).
    case nothing. nil
    case just 'is. is
|]

gsimplicit_env_generators_get = [gs:value| λ 'env. 〈
    'consumes ∝ env #generator.consumes;
〉 |]

gsimplicit_env_consumes_insert = [gs:value| λ 'v. λ 'is. λ 'env. record.∧ 〈 'consumes ∝ ordered-map.insert gsvar.<=> v is (env #consumes); 〉 env |]

gsimplicit_env_empty = [gs:value| 〈 'consumes ∝ ordered-map.empty; 'generator.consumes ∝ ordered-map.empty; 〉 |]
