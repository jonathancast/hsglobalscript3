module GSDL.Implicits (gsadd_implicits_expr) where

$gsimports

$gsdeclare add-implicits-pat gsadd_implicits_pat

$gsdeclare add-implicits-arg gsadd_implicits_arg

gsadd_implicits_expr = [gs:value| λ 'env. λ 'e. analyze e.
    case expr.natural 'n. e
    case expr.var 'v. foldl
        (λ 'f. λ 'i. analyze i.
            case implicit.here. expr.app f arg.here
        )
        e
        (type.env.implicits.get v env)
    case expr.app 'f 'x. expr.app (add-implicits-expr env f) (add-implicits-arg env x)
    case expr.pat 'p 'mb. expr.pat (add-implicits-pat env p) mb
    case expr.fallible-pat 'p 'mb. expr.fallible-pat (add-implicits-pat env p) mb
    case expr.open-expr 'e 'mb. expr.open-expr (add-implicits-expr env e) mb
    case expr.missing-case. expr.missing-case
|]

gsadd_implicits_arg = [gs:value| λ 'env. λ 'a. analyze a.
    case arg.expr 'pos 'e. arg.expr pos (add-implicits-expr env e)
|]

gsadd_implicits_pat = [gs:value| λ 'env. λ 'p. analyze p.
    case pat.discard. pat.discard
    case pat.var 'v. pat.var v
|]
