{-# LANGUAGE TemplateHaskell #-}

import GSI.Env (runGSProgram)
$gsimports

$gsdeclare gstyc gstyc
$gsdeclare gsrun gsrun

main = runGSProgram $ [gs:value| gsmain gstyc gsrun |]

gstyc = [gs:value| λ 'pos. λ 'ty. type-checker.for
    . type-checker.unify pos ty (
        type.function (type.app (type.const (gsvar qq{list.t})) $ type.app (type.const (gsvar qq{list.t})) $ type.const (gsvar qq{rune.t})) $
            type.app (type.const (gsvar qq{gsi.m})) type.empty-signature
    )
|]

gsrun = [gs:value| λ 'prog. λ 'args. impfor
        'p ← gsapply prog (gsinject args : nil);
        't ← create-thread p;
    . exec-main-thread t
|]
