#! /usr/local/plan9/bin/rc

./build-tests || exit $status

./Test || exit $status

. $GS_SPEC/bin/test-fns
. $GS_SPEC/bin/gs-spec
. $GS_SPEC/bin/hsgs-spec

fn test_gsi_impl { ./test_gsi_impl.rc $* }

echo '## hsgs2hs'

test_hsgs_empty_file
test_hsgs_non_existent_directory
test_hsgs_empty_directory
test_hsgs_no_interpolations
test_hsgs_haskell_interpolation
test_hsgs_normal_bracket
test_hsgs_comments

echo '### Different kinds of interpolations'

test_hsgs_variable_expressions
test_hsgs_variable_values
test_hsgs_application_values

echo '### Different kinds of declarations'

test_hsgs_variable_declarations

echo '### Different kinds of expressions'

test_number
test_unbound_variable
test_function_variable
test_function_literal
test_variable_function_body
test_parameter_function_body
test_expression_application_syntax
test_value_function
test_case_hsgs_syntax
test_for_variable
test_lexical_variable_hsgs_syntax
test_empty_structure_literal
test_record_literal_field
test_record_literal_operator_field
test_field_extraction
test_field_extraction_variable
test_prefix_operators
test_monadic_generators
test_monadic_bind_generators
test_natural_number_addition
test_list_addition
test_multiple_non_associative_operators
test_non_associative_operators
test_right_associative_operators
test_parenthesized_operators

echo '### Different kinds of patterns'

test_discard_pattern_hsgs_syntax
test_variable_pattern_hsgs_syntax
test_operator_variable_pattern_hsgs_syntax
test_view_pattern_hsgs_syntax
test_view_pattern_arg_hsgs_syntax
test_view_pattern_operator_hsgs_syntax

echo '### r{} literals'

test_r_literal

echo '### qq{} literals'

test_qq_literal
test_qq_newline
test_qq_interpolation
test_qq_pattern_hsgs_syntax
test_qq_pattern_quoted_bracket_hsgs_syntax
test_qq_pattern_interpolation_hsgs_syntax

echo '### Different functions'

test_undefined_function_hsgs
test_undefined_argument_hsgs
test_undefined_value_hsgs
test_error_function_hsgs
test_print_error_function_hsgs
test_lambdas_hsgs
ok_fuzzy_diff_regex_compiled '-- lambda stack traces --' hsgs2hs lambda-stack-trace.hsgs .hs runghc `{./test-ghcoptions}

echo '### Different kinds of generators'

test_hsgs_exec_binds
ok_diff_compiler '-- variable definition binds --' hsgs2hs bound-variable-bind-impfor.hsgs bound-variable-bind-impfor.hs
ok_diff_compiled '-- variable definition matches --' hsgs2hs bound-variable-match.hsgs .hs runghc `{./test-ghcoptions}
ok_diff_compiled '-- variable binds are in scope in subsequent generators --' hsgs2hs bound-variable-bind-in-generator.hsgs .hs runghc `{./test-ghcoptions}
ok_diff_compiled '-- variable binds are in scope in subsequent monadic generators --' hsgs2hs bound-variable-bind-in-monadic-generator.hsgs .hs runghc `{./test-ghcoptions}

echo '### Different monads'

ok_diff_compiler '-- either-for --' hsgs2hs either-for.hsgs either-for.hs

echo '### Imperative programs'

ok_diff_compiler '-- impfor expressions --' hsgs2hs variable-impfor.hsgs variable-impfor.hs

echo '### log{} literals'

ok_diff_compiler '-- log literals --' hsgs2hs log-literal.hsgs log-literal.hs
ok_diff_compiler '-- backslash escapes --' hsgs2hs log-backslash.hsgs log-backslash.hs
ok_diff_compiler '-- interpolations --' hsgs2hs log-interpolation.hsgs log-interpolation.hs
ok_diff_compiler '-- parentheses (in log{})--' hsgs2hs log-parens.hsgs log-parens.hs

# ok_diff_compiled:  runghc `{./test-ghcoptions}
# import TestHSGS (printTestExpr)
# main = printTestExpr
