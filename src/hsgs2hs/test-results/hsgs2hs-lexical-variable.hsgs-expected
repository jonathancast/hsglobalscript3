{-# LINE 1 "./test-fixtures/lexical-variable.hsgs" #-}
import GSI.Util (Pos(..))
import GSI.Value (GSArg(..))
import GSI.ByteCode (gsbcapply_w)
import GSI.ByteCode (gsbcarg_w)
import GSI.ByteCode (gsbcenter_w)
import GSI.ByteCode (gsbclfield_w)
import GSI.ByteCode (gsbcprim_w)
import GSI.ByteCode (gsbcvarpattern_w)
import GSI.CalculusPrims (gspriminsufficientcases)
import GSI.StdLib (gscase)
import GSI.Syn (gsvar)
(gsbcapply_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 11) gscase [ GSArgExpr (Pos "./test-fixtures/lexical-variable.hsgs" 2 16) (gsbcvarpattern_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 16) "x"), GSArgExpr (Pos "./test-fixtures/lexical-variable.hsgs" 2 20) (gsbcarg_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 20) (\ env -> gsbclfield_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 20) (gsvar "x") env (\ x0 -> gsbcenter_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 20) x0))), GSArgExpr (Pos "./test-fixtures/lexical-variable.hsgs" 2 22) (gsbcarg_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 22) (\ x -> gsbcprim_w (Pos "./test-fixtures/lexical-variable.hsgs" 2 22) gspriminsufficientcases x)) ])
